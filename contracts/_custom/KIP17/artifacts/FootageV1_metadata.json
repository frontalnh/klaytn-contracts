{
	"compiler": {
		"version": "0.5.6+commit.b259423e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [
					{
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "price",
						"type": "uint256"
					},
					{
						"name": "limit_",
						"type": "uint256"
					},
					{
						"name": "startTime_",
						"type": "uint32"
					},
					{
						"name": "endTime_",
						"type": "uint32"
					}
				],
				"name": "openAllowlistSale",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "allowSaleConf",
				"outputs": [
					{
						"name": "open",
						"type": "bool"
					},
					{
						"name": "price",
						"type": "uint256"
					},
					{
						"name": "startTime",
						"type": "uint32"
					},
					{
						"name": "endTime",
						"type": "uint32"
					},
					{
						"name": "limit",
						"type": "uint256"
					},
					{
						"name": "minted",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "from",
						"type": "address"
					},
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "publicSaleConf",
				"outputs": [
					{
						"name": "open",
						"type": "bool"
					},
					{
						"name": "publicSaleKey",
						"type": "uint32"
					},
					{
						"name": "startTime",
						"type": "uint32"
					},
					{
						"name": "endTime",
						"type": "uint32"
					},
					{
						"name": "price",
						"type": "uint64"
					},
					{
						"name": "limit",
						"type": "uint256"
					},
					{
						"name": "checkAddressLimit",
						"type": "uint32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "closePublicSale",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "owner",
						"type": "address"
					},
					{
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenOfOwnerByIndex",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "quantity",
						"type": "uint256"
					}
				],
				"name": "devMint",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "publicSaleKey",
						"type": "uint32"
					},
					{
						"name": "priceWei",
						"type": "uint64"
					},
					{
						"name": "startTime",
						"type": "uint32"
					},
					{
						"name": "endTime",
						"type": "uint32"
					},
					{
						"name": "limit",
						"type": "uint256"
					},
					{
						"name": "checkAddressLimit_",
						"type": "uint32"
					}
				],
				"name": "openPublicSale",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "from",
						"type": "address"
					},
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenByIndex",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "revealed",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "baseURI",
						"type": "string"
					}
				],
				"name": "setBaseURI",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "name_",
						"type": "string"
					},
					{
						"name": "symbol_",
						"type": "string"
					},
					{
						"name": "maxBatchSize_",
						"type": "uint256"
					},
					{
						"name": "collectionSize_",
						"type": "uint256"
					},
					{
						"name": "amountForDevs_",
						"type": "uint256"
					}
				],
				"name": "initialize",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "amount_",
						"type": "uint256"
					}
				],
				"name": "setMaxPerAddress",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "maxPerAddressDuringMint",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "key",
						"type": "uint32"
					}
				],
				"name": "setPublicSaleKey",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "reveal",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"name": "allowlist",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "uri",
						"type": "string"
					}
				],
				"name": "setRevealURI",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "withdrawMoney",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "addresses",
						"type": "address[]"
					},
					{
						"name": "numSlots",
						"type": "uint256[]"
					}
				],
				"name": "seedAllowlist",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "from",
						"type": "address"
					},
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "quantity_",
						"type": "uint256"
					}
				],
				"name": "allowlistMint",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "quantity",
						"type": "uint256"
					},
					{
						"name": "callerPublicSaleKey",
						"type": "uint256"
					}
				],
				"name": "publicSaleMint",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "owner",
						"type": "address"
					},
					{
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "closeAllowListSale",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "amountForDevs",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "approved",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"approve(address,uint256)": {
					"details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
					"params": {
						"to": "address to be approved for the given token ID",
						"tokenId": "uint256 ID of the token to be approved"
					}
				},
				"balanceOf(address)": {
					"details": "Gets the balance of the specified address.",
					"params": {
						"owner": "address to query the balance of"
					},
					"return": "uint256 representing the amount owned by the passed address"
				},
				"burn(uint256)": {
					"details": "Burns a specific KIP17 token.",
					"params": {
						"tokenId": "uint256 id of the KIP17 token to be burned."
					}
				},
				"getApproved(uint256)": {
					"details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
					"params": {
						"tokenId": "uint256 ID of the token to query the approval of"
					},
					"return": "address currently approved for the given token ID"
				},
				"isApprovedForAll(address,address)": {
					"details": "Tells whether an operator is approved by a given owner.",
					"params": {
						"operator": "operator address which you want to query the approval of",
						"owner": "owner address which you want to query the approval of"
					},
					"return": "bool whether the given operator is approved by the given owner"
				},
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				},
				"name()": {
					"details": "Gets the token name.",
					"return": "string representing the token name"
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"ownerOf(uint256)": {
					"details": "Gets the owner of the specified token ID.",
					"params": {
						"tokenId": "uint256 ID of the token to query the owner of"
					},
					"return": "address currently marked as the owner of the given token ID"
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"safeTransferFrom(address,address,uint256)": {
					"details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
					"params": {
						"from": "current owner of the token",
						"to": "address to receive the ownership of the given token ID",
						"tokenId": "uint256 ID of the token to be transferred"
					}
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
					"params": {
						"_data": "bytes data to send along with a safe transfer check",
						"from": "current owner of the token",
						"to": "address to receive the ownership of the given token ID",
						"tokenId": "uint256 ID of the token to be transferred"
					}
				},
				"setApprovalForAll(address,bool)": {
					"details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
					"params": {
						"approved": "representing the status of the approval to be set",
						"to": "operator address to set the approval"
					}
				},
				"supportsInterface(bytes4)": {
					"details": "See `IKIP13.supportsInterface`.   * Time complexity O(1), guaranteed to always use less than 30 000 gas."
				},
				"symbol()": {
					"details": "Gets the token symbol.",
					"return": "string representing the token symbol"
				},
				"tokenByIndex(uint256)": {
					"details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
					"params": {
						"index": "uint256 representing the index to be accessed of the tokens list"
					},
					"return": "uint256 token ID at the given index of the tokens list"
				},
				"tokenOfOwnerByIndex(address,uint256)": {
					"details": "Gets the token ID at a given index of the tokens list of the requested owner.",
					"params": {
						"index": "uint256 representing the index to be accessed of the requested tokens list",
						"owner": "address owning the tokens list to be accessed"
					},
					"return": "uint256 token ID at the given index of the tokens list owned by the requested address"
				},
				"tokenURI(uint256)": {
					"details": "See {IKIP17Metadata-tokenURI}."
				},
				"totalSupply()": {
					"details": "Gets the total amount of tokens stored by the contract.",
					"return": "uint256 representing the total amount of tokens"
				},
				"transferFrom(address,address,uint256)": {
					"details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
					"params": {
						"from": "current owner of the token",
						"to": "address to receive the ownership of the given token ID",
						"tokenId": "uint256 ID of the token to be transferred"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/_custom/KIP17/FootageV1.sol": "FootageV1"
		},
		"evmVersion": "constantinople",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/_custom/KIP17/FootageV1.sol": {
			"keccak256": "0x830ee6e131ea7434cff5a99725c55f4f5802e568af2f944a48970478dca7a406",
			"urls": [
				"bzzr://922e4ea62013bdbdcaaf0b3704399ed09307c12d8b5e380c6f201798d3de94c2"
			]
		},
		"contracts/_custom/KIP17/KIP17BurnableUpgradeable.sol": {
			"keccak256": "0x6aa286f50fcc5a6f1e3590e27005873be91d38245cab5ada05d847dd82eb83a8",
			"urls": [
				"bzzr://e52ce64d8f79de84dfcdbd1c95093fd5897e3f9bd7a51fd38713756f7665c625"
			]
		},
		"contracts/_custom/KIP17/KIP17EnumerableUpgradeable.sol": {
			"keccak256": "0x4d4a1e633b0ca8d6ca365102e3b1482dc462a9e98044d45b228744fb68dbd993",
			"urls": [
				"bzzr://fb5177a550b4454ed3f68a3e7d8cc230f0b8f0af1a84c0c4115b584066b2aaee"
			]
		},
		"contracts/_custom/KIP17/KIP17TokenAUpgradeable.sol": {
			"keccak256": "0x0836193e3d7d53f5aabea13f2eda2dd1129a4a7f19907ca23fec722a33bb96cb",
			"urls": [
				"bzzr://c118bac616efe093417c1b12324dd80f1b995103a937d803b5414d4aca8b8efa"
			]
		},
		"contracts/_custom/KIP17/KIP17Upgradeable.sol": {
			"keccak256": "0xd17e7a1ff5da2b2a7dd846cbc934b52376e75925664c38ca485f3d19bd4b948d",
			"urls": [
				"bzzr://6610cf9742c2f11551582e9e96a07f616b3f467e2ca4412bef0cf773fdf9ca51"
			]
		},
		"contracts/_custom/introspection/KIP13Upgradeable.sol": {
			"keccak256": "0x6c40bb75ebb71394bc8c0bcfdc29c71a32b0f13fc14769debb1fa6e46d6a9293",
			"urls": [
				"bzzr://ff74a16a9a76d2cd9ea56b350c51bc0657cccab33a32b7cbae9aebb432b24b7b"
			]
		},
		"contracts/_custom/oldproxy/Initializable.sol": {
			"keccak256": "0x643a1ff7f7fabbbd9f9511a783f3159033ef27aae0e2dac168cb454ac207fbf3",
			"urls": [
				"bzzr://2276561280341fa6cf8b9a95b4e1c96587042c633102c92762d6e1e8a13ff05d"
			]
		},
		"contracts/_custom/ownership/OwnableUpgradeable.sol": {
			"keccak256": "0x0c430a85a35a58ee2e64a326f537a509bf25bc8c6f48a79f793b3ef1a9337d0d",
			"urls": [
				"bzzr://90a6c53311b94892ae4b286c1a1ec5cc930b63e5093b1ce898fb120b88961588"
			]
		},
		"contracts/_custom/reveal/RevealableUpgradeable.sol": {
			"keccak256": "0x7f4d17a31b1b111f053a6e9aac1871a5a56db423c2f15700ba7c8afc92046f8d",
			"urls": [
				"bzzr://bd400774172ac212028442b2ca37f9325e2158037c5a21b849f99df3139f6866"
			]
		},
		"contracts/_custom/utils/ReentrancyGuardUpgradable.sol": {
			"keccak256": "0x6ab60bd7b9f69182582d3a4b5e7cc6b60faf44249d62be2365ff1b1bac514134",
			"urls": [
				"bzzr://baec21bf80f27b2eda5c452cecfd45d1b49cb7c7f0eb66aaf4403207b42f91e1"
			]
		},
		"contracts/_custom/utils/Strings.sol": {
			"keccak256": "0x9f40210b4faa4cc52dc4a9e5b98207216055682470efb7e3a543280ed850726f",
			"urls": [
				"bzzr://13fae1612997d70d27df81c88d3254a2a9911baf53a96d28e368eac1c8062e7a"
			]
		},
		"contracts/drafts/Counters.sol": {
			"keccak256": "0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11",
			"urls": [
				"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea"
			]
		},
		"contracts/introspection/IKIP13.sol": {
			"keccak256": "0xf7415711dbec40bc633af7d8cb5c3c0bc3d1ed97fd8c13f795a03eb3073ea219",
			"urls": [
				"bzzr://2c161a0e94debcd164c7a87e2c12c087ffefe24bc7a4a9f304f5d8ba39ed15a1"
			]
		},
		"contracts/math/SafeMath.sol": {
			"keccak256": "0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076",
			"urls": [
				"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad"
			]
		},
		"contracts/token/KIP17/IERC721Receiver.sol": {
			"keccak256": "0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9",
			"urls": [
				"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076"
			]
		},
		"contracts/token/KIP17/IKIP17.sol": {
			"keccak256": "0x0b30e5fe64932d8b9343c7897ebb7a0ac15a15577ce5ec1f18c3ba4396120de0",
			"urls": [
				"bzzr://7027ab2da185a775cc0697e60a6d17db910959fa365c5337dce50d2bf380c4fc"
			]
		},
		"contracts/token/KIP17/IKIP17Enumerable.sol": {
			"keccak256": "0x5a6a02f871bfcf213445ac1c3625af470cbd25599f915f2bbc0b7df0ed998031",
			"urls": [
				"bzzr://f613649522f60a170ab6e4cc32b2087cb29d6bfba77680797cfa5467ffc8c356"
			]
		},
		"contracts/token/KIP17/IKIP17Receiver.sol": {
			"keccak256": "0xf3dee67a4a395e20ad0459e1f255b9c563272d2fb6752e7421c1302cfcf00ff0",
			"urls": [
				"bzzr://28f7d1d507cc9f1377346b3c8a868b712a68b79dfe8888231b30671848b0a80b"
			]
		},
		"contracts/utils/Address.sol": {
			"keccak256": "0x823cd3a29dd4f710e9350f8e569f4db5bcd25a32257b7586c2603b5c205f1d76",
			"urls": [
				"bzzr://16eb37aaae6ccbccbadb24cc0722fcd69f45705d34ac439ec627327376d6ac09"
			]
		}
	},
	"version": 1
}