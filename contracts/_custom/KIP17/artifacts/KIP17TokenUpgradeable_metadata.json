{
	"compiler": {
		"version": "0.5.6+commit.b259423e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [
					{
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "from",
						"type": "address"
					},
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "owner",
						"type": "address"
					},
					{
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenOfOwnerByIndex",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "__KIP17Enumerable_init",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "from",
						"type": "address"
					},
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "account",
						"type": "address"
					}
				],
				"name": "isPauser",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "name",
						"type": "string"
					},
					{
						"name": "symbol",
						"type": "string"
					}
				],
				"name": "__KIP17Full_init",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenByIndex",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"name": "tokenURI",
						"type": "string"
					}
				],
				"name": "mintWithTokenURI",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "__KIP17Mintable_init",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "renouncePauser",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "account",
						"type": "address"
					}
				],
				"name": "addPauser",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "__KIP17Burnable_init",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "__KIP17MetadataMintable_init",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "account",
						"type": "address"
					}
				],
				"name": "addMinter",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "renounceMinter",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "__KIP17_init",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "account",
						"type": "address"
					}
				],
				"name": "isMinter",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "from",
						"type": "address"
					},
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "name",
						"type": "string"
					},
					{
						"name": "symbol",
						"type": "string"
					}
				],
				"name": "__KIP17Metadata_init",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "__KIP17Pausable_init",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "owner",
						"type": "address"
					},
					{
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "account",
						"type": "address"
					}
				],
				"name": "PauserAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "account",
						"type": "address"
					}
				],
				"name": "PauserRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "account",
						"type": "address"
					}
				],
				"name": "MinterAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "account",
						"type": "address"
					}
				],
				"name": "MinterRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "approved",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"__KIP17Burnable_init()": {
					"details": "Constructor function."
				},
				"__KIP17Enumerable_init()": {
					"details": "Constructor function."
				},
				"__KIP17MetadataMintable_init()": {
					"details": "Constructor function."
				},
				"__KIP17Metadata_init(string,string)": {
					"details": "Constructor function"
				},
				"__KIP17Mintable_init()": {
					"details": "Constructor function."
				},
				"__KIP17Pausable_init()": {
					"details": "Constructor function."
				},
				"balanceOf(address)": {
					"details": "Gets the balance of the specified address.",
					"params": {
						"owner": "address to query the balance of"
					},
					"return": "uint256 representing the amount owned by the passed address"
				},
				"burn(uint256)": {
					"details": "Burns a specific KIP17 token.",
					"params": {
						"tokenId": "uint256 id of the KIP17 token to be burned."
					}
				},
				"getApproved(uint256)": {
					"details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
					"params": {
						"tokenId": "uint256 ID of the token to query the approval of"
					},
					"return": "address currently approved for the given token ID"
				},
				"isApprovedForAll(address,address)": {
					"details": "Tells whether an operator is approved by a given owner.",
					"params": {
						"operator": "operator address which you want to query the approval of",
						"owner": "owner address which you want to query the approval of"
					},
					"return": "bool whether the given operator is approved by the given owner"
				},
				"mint(address,uint256)": {
					"details": "Function to mint tokens.",
					"params": {
						"to": "The address that will receive the minted tokens.",
						"tokenId": "The token id to mint."
					},
					"return": "A boolean that indicates if the operation was successful."
				},
				"mintWithTokenURI(address,uint256,string)": {
					"details": "Function to mint tokens.",
					"params": {
						"to": "The address that will receive the minted tokens.",
						"tokenId": "The token id to mint.",
						"tokenURI": "The token URI of the minted token."
					},
					"return": "A boolean that indicates if the operation was successful."
				},
				"name()": {
					"details": "Gets the token name.",
					"return": "string representing the token name"
				},
				"ownerOf(uint256)": {
					"details": "Gets the owner of the specified token ID.",
					"params": {
						"tokenId": "uint256 ID of the token to query the owner of"
					},
					"return": "address currently marked as the owner of the given token ID"
				},
				"pause()": {
					"details": "Called by a pauser to pause, triggers stopped state."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"safeTransferFrom(address,address,uint256)": {
					"details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
					"params": {
						"from": "current owner of the token",
						"to": "address to receive the ownership of the given token ID",
						"tokenId": "uint256 ID of the token to be transferred"
					}
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onKIP17Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
					"params": {
						"_data": "bytes data to send along with a safe transfer check",
						"from": "current owner of the token",
						"to": "address to receive the ownership of the given token ID",
						"tokenId": "uint256 ID of the token to be transferred"
					}
				},
				"supportsInterface(bytes4)": {
					"details": "See `IKIP13.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
				},
				"symbol()": {
					"details": "Gets the token symbol.",
					"return": "string representing the token symbol"
				},
				"tokenByIndex(uint256)": {
					"details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
					"params": {
						"index": "uint256 representing the index to be accessed of the tokens list"
					},
					"return": "uint256 token ID at the given index of the tokens list"
				},
				"tokenOfOwnerByIndex(address,uint256)": {
					"details": "Gets the token ID at a given index of the tokens list of the requested owner.",
					"params": {
						"index": "uint256 representing the index to be accessed of the requested tokens list",
						"owner": "address owning the tokens list to be accessed"
					},
					"return": "uint256 token ID at the given index of the tokens list owned by the requested address"
				},
				"tokenURI(uint256)": {
					"details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
					"params": {
						"tokenId": "uint256 ID of the token to query"
					}
				},
				"totalSupply()": {
					"details": "Gets the total amount of tokens stored by the contract.",
					"return": "uint256 representing the total amount of tokens"
				},
				"unpause()": {
					"details": "Called by a pauser to unpause, returns to normal state."
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/_custom/KIP17/KIP17TokenUpgradeable.sol": "KIP17TokenUpgradeable"
		},
		"evmVersion": "constantinople",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/_custom/KIP17/KIP17BurnableUpgradeable.sol": {
			"keccak256": "0xd0b8df4649558c3b3dacd1b730a60774eae8cc387230993e29c3d7c1a96ee2c3",
			"urls": [
				"bzzr://afe2f6182290493c25d182b353aeff9997a58b0d97d7198f5e7144213b457910"
			]
		},
		"contracts/_custom/KIP17/KIP17EnumerableUpgradeable.sol": {
			"keccak256": "0xde87ad75cec97b07444d9c4467b71a6a31fae9a20dfb0be0b4717925e33a2b5b",
			"urls": [
				"bzzr://9b1764cd10a5c7e895aaca7c280f8a0eab02043b1dda0a17c5f87b5d7599f4fc"
			]
		},
		"contracts/_custom/KIP17/KIP17FullUpgradeable.sol": {
			"keccak256": "0x4b176f9388bf76c64ae0b28976ef2ef9c8b5cfcb81bb923a4b7c56828ba333c2",
			"urls": [
				"bzzr://e53f46902d94deac92c96e50761a8a6d7eb1aabe53c7cfbd999b505b9fa1e16c"
			]
		},
		"contracts/_custom/KIP17/KIP17MetadataMintableUpgradeable.sol": {
			"keccak256": "0x95970bab32c61b209ffa99bcc70ae18a510606c1f10fe0fae5cf1b4a2c9a7d2d",
			"urls": [
				"bzzr://f460d9a553997b1032dd18f0abfe5051ff8088490337f4cbac08b28a8eabb268"
			]
		},
		"contracts/_custom/KIP17/KIP17MetadataUpgradeable.sol": {
			"keccak256": "0xab3e8064ba5424c2abc65f353d54733d06b9dae9b1c2d96057ba51d8b38af919",
			"urls": [
				"bzzr://f24f465d000c7bffce8ba09aca0e33759bd9697a555c7cddcb1e84ce95a49f19"
			]
		},
		"contracts/_custom/KIP17/KIP17MintableUpgradeable.sol": {
			"keccak256": "0x7f79ab79de1c996f5cd413188545daa11b4b2099b711075ea4180ea59208cb0e",
			"urls": [
				"bzzr://726a33dc2fb688eba16f2d14404a3d3f74f20de5129218da1844fcb1fca440b0"
			]
		},
		"contracts/_custom/KIP17/KIP17PausableUpgradeable.sol": {
			"keccak256": "0x5b26be572b1f55bfc180861d2ad906ba8d2c161f78fbbebee386bf05a8a55f6e",
			"urls": [
				"bzzr://830866330465252219c3d93578f21c5c9db699da065e2508bafa4accbdeb73b5"
			]
		},
		"contracts/_custom/KIP17/KIP17TokenUpgradeable.sol": {
			"keccak256": "0x1e3bb1bfa9b34955eddb26593c85b2b3d6193125bfaaf5c0a899aa09e627b66e",
			"urls": [
				"bzzr://b1845937c0ba2762631e3a228a4749ec720ca0775434807deb05da1ac0b1baf4"
			]
		},
		"contracts/_custom/KIP17/KIP17Upgradeable.sol": {
			"keccak256": "0x6829ffa354738810aa016906451788a5bb02eb94b26b950a695dd86cb5f78ce5",
			"urls": [
				"bzzr://8bbd0edf91c4347482d2397870d14b96f16c9dfcfd06482b0256e2e14c2c8a25"
			]
		},
		"contracts/_custom/introspection/KIP13Upgradeable.sol": {
			"keccak256": "0x6c40bb75ebb71394bc8c0bcfdc29c71a32b0f13fc14769debb1fa6e46d6a9293",
			"urls": [
				"bzzr://ff74a16a9a76d2cd9ea56b350c51bc0657cccab33a32b7cbae9aebb432b24b7b"
			]
		},
		"contracts/access/Roles.sol": {
			"keccak256": "0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb",
			"urls": [
				"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad"
			]
		},
		"contracts/access/roles/MinterRole.sol": {
			"keccak256": "0x63da54a7a5d4e4d82ac8d1f4f7f995fd8ef2b5fe1f2960b83e534fa37fb60910",
			"urls": [
				"bzzr://cea53b805426e40efadb24f2613aca39182462e9ecd23fde7aacf0c4b5885aaf"
			]
		},
		"contracts/access/roles/PauserRole.sol": {
			"keccak256": "0xf6826c684d51ca28db5293ce11a54c5cca1c757b6cd32b87613833c65086f995",
			"urls": [
				"bzzr://01b2756ab5b41b1d7ccadfeac53fbdce9c889263f1e011329c300c5fa3fda65f"
			]
		},
		"contracts/drafts/Counters.sol": {
			"keccak256": "0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11",
			"urls": [
				"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea"
			]
		},
		"contracts/introspection/IKIP13.sol": {
			"keccak256": "0xf7415711dbec40bc633af7d8cb5c3c0bc3d1ed97fd8c13f795a03eb3073ea219",
			"urls": [
				"bzzr://2c161a0e94debcd164c7a87e2c12c087ffefe24bc7a4a9f304f5d8ba39ed15a1"
			]
		},
		"contracts/introspection/KIP13.sol": {
			"keccak256": "0x84681701e79f53ba1e9660b6a130bba31880d66cee996ab7d5567d239155c6da",
			"urls": [
				"bzzr://743958df51380e11b5e58092297c1e122582ade8d358010c733f27e175e7ca10"
			]
		},
		"contracts/lifecycle/Pausable.sol": {
			"keccak256": "0x609f8cb524cd6b502624c79c099ec2fc6f23eef57b5c38e28efd82490875f37e",
			"urls": [
				"bzzr://46ee461a64298ef418bd100df1301355f4dc9ffeb06fe7a39aaf98d45c0bf988"
			]
		},
		"contracts/math/SafeMath.sol": {
			"keccak256": "0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076",
			"urls": [
				"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad"
			]
		},
		"contracts/token/KIP17/IERC721Receiver.sol": {
			"keccak256": "0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9",
			"urls": [
				"bzzr://2466b6491600969dd9ffdeb0b705e7cecc38418aa215cec64b2481273bba9076"
			]
		},
		"contracts/token/KIP17/IKIP17.sol": {
			"keccak256": "0x0b30e5fe64932d8b9343c7897ebb7a0ac15a15577ce5ec1f18c3ba4396120de0",
			"urls": [
				"bzzr://7027ab2da185a775cc0697e60a6d17db910959fa365c5337dce50d2bf380c4fc"
			]
		},
		"contracts/token/KIP17/IKIP17Enumerable.sol": {
			"keccak256": "0x5a6a02f871bfcf213445ac1c3625af470cbd25599f915f2bbc0b7df0ed998031",
			"urls": [
				"bzzr://f613649522f60a170ab6e4cc32b2087cb29d6bfba77680797cfa5467ffc8c356"
			]
		},
		"contracts/token/KIP17/IKIP17Metadata.sol": {
			"keccak256": "0xad2c2abcd4cb881620f297edcdf9cd491effc1ace2f12f468bf3546f940d1bf4",
			"urls": [
				"bzzr://f2de7f30fb22e7238dd752bbd1ac67648cc3f6236348a63d0224fbb659090d48"
			]
		},
		"contracts/token/KIP17/IKIP17Receiver.sol": {
			"keccak256": "0xf3dee67a4a395e20ad0459e1f255b9c563272d2fb6752e7421c1302cfcf00ff0",
			"urls": [
				"bzzr://28f7d1d507cc9f1377346b3c8a868b712a68b79dfe8888231b30671848b0a80b"
			]
		},
		"contracts/token/KIP17/KIP17.sol": {
			"keccak256": "0x3ffc95c0da23762b273dad189c551bc0591811ca96026b0da064464aa1f1ec4f",
			"urls": [
				"bzzr://6187953810079ca3e10048653d8de3c23991bd4e4df84ffd741f3b2c6f6766c7"
			]
		},
		"contracts/token/KIP17/KIP17Metadata.sol": {
			"keccak256": "0x67db095981e55d1f88a38e7f794f85df18b9d2a4a8c6906c1d7b793af04a99b8",
			"urls": [
				"bzzr://38399a4e42bf9737f880a81bc6a7d19b2e570426101df7f9747759e33f79e396"
			]
		},
		"contracts/utils/Address.sol": {
			"keccak256": "0x823cd3a29dd4f710e9350f8e569f4db5bcd25a32257b7586c2603b5c205f1d76",
			"urls": [
				"bzzr://16eb37aaae6ccbccbadb24cc0722fcd69f45705d34ac439ec627327376d6ac09"
			]
		}
	},
	"version": 1
}